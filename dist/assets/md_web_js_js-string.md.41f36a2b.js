import{_ as s,o as a,c as n,a as l}from"./app.aa5490e0.js";const C=JSON.parse('{"title":"JavaScript - 字符串","description":"","frontmatter":{},"headers":[{"level":2,"title":"模板字符串","slug":"模板字符串","link":"#模板字符串","children":[]},{"level":2,"title":"常用函数","slug":"常用函数","link":"#常用函数","children":[]},{"level":2,"title":"ES 6 之后新增方法","slug":"es-6-之后新增方法","link":"#es-6-之后新增方法","children":[{"level":3,"title":"includes(), startsWith(), endsWith()","slug":"includes-startswith-endswith","link":"#includes-startswith-endswith","children":[]},{"level":3,"title":"repeat()","slug":"repeat","link":"#repeat","children":[]},{"level":3,"title":"padStart()，padEnd()","slug":"padstart-padend","link":"#padstart-padend","children":[]},{"level":3,"title":"trimStart()，trimEnd()","slug":"trimstart-trimend","link":"#trimstart-trimend","children":[]},{"level":3,"title":"replaceAll()","slug":"replaceall","link":"#replaceall","children":[]}]}],"relativePath":"md/web/js/js-string.md","lastUpdated":1674277092000}'),p={name:"md/web/js/js-string.md"},o=l(`<h1 id="javascript-字符串" tabindex="-1">JavaScript - 字符串 <a class="header-anchor" href="#javascript-字符串" aria-hidden="true">#</a></h1><h2 id="模板字符串" tabindex="-1">模板字符串 <a class="header-anchor" href="#模板字符串" aria-hidden="true">#</a></h2><p>模板字符串（template string）是增强版的字符串，用反引号（\`）标识。它可以当作普通字符串使用，也可以用来定义多行字符串，或者在字符串中嵌入变量。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// 普通字符串</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">In JavaScript &#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">&#39; is a line-feed.</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// 多行字符串</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">In JavaScript this is</span></span>
<span class="line"><span style="color:#C3E88D;"> not legal.</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">string text line 1</span></span>
<span class="line"><span style="color:#C3E88D;">string text line 2</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// 字符串中嵌入变量</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bob</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">today</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Hello </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">, how are you </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">?</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span></code></pre></div><h2 id="常用函数" tabindex="-1">常用函数 <a class="header-anchor" href="#常用函数" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">方法</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>charAt()</code></td><td>返回指定索引位置的字符</td></tr><tr><td style="text-align:center;"><code>concat()</code></td><td>连接两个或多个字符串，返回连接后的字符串</td></tr><tr><td style="text-align:center;"><code>indexOf()</code></td><td>返回字符串中检索指定字符第一次出现的位置</td></tr><tr><td style="text-align:center;"><code>lastIndexOf()</code></td><td>返回字符串中检索指定字符最后一次出现的位置</td></tr><tr><td style="text-align:center;"><code>localeCompare()</code></td><td>用本地特定的顺序来比较两个字符串</td></tr><tr><td style="text-align:center;"><code>match()</code></td><td>找到一个或多个正则表达式的匹配</td></tr><tr><td style="text-align:center;"><code>replace()</code></td><td>替换与正则表达式匹配的子串</td></tr><tr><td style="text-align:center;"><code>search()</code></td><td>检索与正则表达式相匹配的值</td></tr><tr><td style="text-align:center;"><code>slice()</code></td><td>提取字符串的片断，并在新的字符串中返回被提取的部分</td></tr><tr><td style="text-align:center;"><code>split()</code></td><td>把字符串分割为子字符串数组</td></tr><tr><td style="text-align:center;"><code>substr()</code></td><td>从起始索引号提取字符串中指定数目的字符</td></tr><tr><td style="text-align:center;"><code>substring()</code></td><td>提取字符串中两个指定的索引号之间的字符</td></tr><tr><td style="text-align:center;"><code>toLocaleLowerCase()</code></td><td>根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td style="text-align:center;"><code>toLocaleUpperCase()</code></td><td>根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td style="text-align:center;"><code>toLowerCase()</code></td><td>把字符串转换为小写</td></tr><tr><td style="text-align:center;"><code>toString()</code></td><td>返回字符串对象值</td></tr><tr><td style="text-align:center;"><code>toUpperCase()</code></td><td>把字符串转换为大写</td></tr><tr><td style="text-align:center;"><code>trim()</code></td><td>移除字符串首尾空白</td></tr><tr><td style="text-align:center;"><code>valueOf()</code></td><td>返回某个字符串对象的原始值</td></tr></tbody></table><h2 id="es-6-之后新增方法" tabindex="-1">ES 6 之后新增方法 <a class="header-anchor" href="#es-6-之后新增方法" aria-hidden="true">#</a></h2><h3 id="includes-startswith-endswith" tabindex="-1">includes(), startsWith(), endsWith() <a class="header-anchor" href="#includes-startswith-endswith" aria-hidden="true">#</a></h3><p>传统上，JavaScript 只有<code>indexOf</code>方法，可以用来确定一个字符串是否包含在另一个字符串中。ES6 又提供了三种新方法。</p><ul><li><strong>includes()</strong>：返回布尔值，表示是否找到了参数字符串。</li><li><strong>startsWith()</strong>：返回布尔值，表示参数字符串是否在原字符串的头部。</li><li><strong>endsWith()</strong>：返回布尔值，表示参数字符串是否在原字符串的尾部。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello world!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startsWith</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">endsWith</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// true</span></span>
<span class="line"></span></code></pre></div><p>这三个方法都支持第二个参数，表示开始搜索的位置。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello world!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startsWith</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">endsWith</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// false</span></span>
<span class="line"></span></code></pre></div><p>上面代码表示，使用第二个参数 <code>n</code> 时，<code>endsWith</code> 的行为与其他两个方法有所不同。它针对前 <code>n</code> 个字符，而其他两个方法针对从第 <code>n</code> 个位置直到字符串结束。</p><h3 id="repeat" tabindex="-1">repeat() <a class="header-anchor" href="#repeat" aria-hidden="true">#</a></h3><p><code>repeat</code>方法返回一个新字符串，表示将原字符串重复<code>n</code>次。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">repeat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &quot;xxx&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">repeat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &quot;hellohello&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">na</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">repeat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &quot;&quot;</span></span>
<span class="line"></span></code></pre></div><p>参数如果是小数，会被取整。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">na</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">repeat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2.9</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &quot;nana&quot;</span></span>
<span class="line"></span></code></pre></div><p>如果<code>repeat</code>的参数是负数或者<code>Infinity</code>，会报错。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">na</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">repeat</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">Infinity</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// RangeError</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">na</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">repeat</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// RangeError</span></span>
<span class="line"></span></code></pre></div><h3 id="padstart-padend" tabindex="-1">padStart()，padEnd() <a class="header-anchor" href="#padstart-padend" aria-hidden="true">#</a></h3><p>ES2017 引入了字符串补全长度的功能。如果某个字符串不够指定长度，会在头部或尾部补全。<code>padStart()</code> 用于头部补全，<code>padEnd()</code> 用于尾部补全。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padStart</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;ababx&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padStart</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;abax&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padEnd</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;xabab&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padEnd</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;xaba&#39;</span></span>
<span class="line"></span></code></pre></div><p>上面代码中，<code>padStart()</code> 和 <code>padEnd()</code> 一共接受两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串。</p><p>如果原字符串的长度，等于或大于最大长度，则字符串补全不生效，返回原字符串。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padStart</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;xxx&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padEnd</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;xxx&#39;</span></span>
<span class="line"></span></code></pre></div><p>如果用来补全的字符串与原字符串，两者的长度之和超过了最大长度，则会截去超出位数的补全字符串。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padStart</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0123456789</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// &#39;0123456abc&#39;</span></span>
<span class="line"></span></code></pre></div><p>如果省略第二个参数，默认使用空格补全长度。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padStart</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;   x&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padEnd</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// &#39;x   &#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="trimstart-trimend" tabindex="-1">trimStart()，trimEnd() <a class="header-anchor" href="#trimstart-trimend" aria-hidden="true">#</a></h3><p>它们的行为与<code>trim()</code>一致，<code>trimStart()</code>消除字符串头部的空格，<code>trimEnd()</code>消除尾部的空格。它们返回的都是新字符串，不会修改原始字符串。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">  abc  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;">// &quot;abc&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trimStart</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;">// &quot;abc  &quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trimEnd</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;">// &quot;  abc&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="replaceall" tabindex="-1">replaceAll() <a class="header-anchor" href="#replaceall" aria-hidden="true">#</a></h3><p>ES2021 引入了 <code>replaceAll()</code> 方法，可以一次性替换所有匹配。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aabbcc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replaceAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// &#39;aa__cc&#39;</span></span>
<span class="line"></span></code></pre></div><p>它的用法与 <code>replace()</code> 相同，返回一个新字符串，不会改变原字符串。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replaceAll</span><span style="color:#A6ACCD;">(searchValue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> replacement)</span></span>
<span class="line"></span></code></pre></div><p>上面代码中，<code>searchValue</code> 是搜索模式，可以是一个字符串，也可以是一个全局的正则表达式（带有 <code>g</code> 修饰符）。</p><p>如果 <code>searchValue</code> 是一个不带有 <code>g</code> 修饰符的正则表达式，<code>replaceAll()</code> 会报错。这一点跟 <code>replace()</code> 不同。</p><p><code>replaceAll()</code> 的第二个参数 <code>replacement</code> 是一个字符串，表示替换的文本，其中可以使用一些特殊字符串。</p><ul><li><strong>$&amp;</strong>：匹配的字符串。</li><li><strong>$\`</strong> ：匹配结果前面的文本。</li><li><strong>$&#39;</strong>：匹配结果后面的文本。</li><li><strong>$n</strong>：匹配成功的第 <code>n</code> 组内容，<code>n</code> 是从 1 开始的自然数。这个参数生效的前提是，第一个参数必须是正则表达式。</li><li><strong>$$</strong>：指代美元符号 <code>$</code>。</li></ul>`,43),e=[o];function t(c,r,D,y,d,F){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{C as __pageData,A as default};
