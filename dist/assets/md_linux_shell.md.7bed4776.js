import{_ as s,o as a,c as n,a as l}from"./app.3caa01d5.js";const p="/imgs/linux/shell/compute.png",o="/imgs/linux/shell/relation.png",e="/imgs/linux/shell/bool.png",c="/imgs/linux/shell/logic.png",t="/imgs/linux/shell/string.png",r="/imgs/linux/shell/file.png",E=JSON.parse('{"title":"shell 编程","description":"","frontmatter":{},"headers":[{"level":2,"title":"shell 变量","slug":"shell-变量","link":"#shell-变量","children":[{"level":3,"title":"变量的定义","slug":"变量的定义","link":"#变量的定义","children":[]},{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]},{"level":3,"title":"位置参数变量","slug":"位置参数变量","link":"#位置参数变量","children":[]},{"level":3,"title":"预定义变量","slug":"预定义变量","link":"#预定义变量","children":[]}]},{"level":2,"title":"运算符","slug":"运算符","link":"#运算符","children":[{"level":3,"title":"运算执行","slug":"运算执行","link":"#运算执行","children":[]},{"level":3,"title":"算数运算符","slug":"算数运算符","link":"#算数运算符","children":[]},{"level":3,"title":"关系运算符","slug":"关系运算符","link":"#关系运算符","children":[]},{"level":3,"title":"布尔运算符","slug":"布尔运算符","link":"#布尔运算符","children":[]},{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]},{"level":3,"title":"字符串运算符","slug":"字符串运算符","link":"#字符串运算符","children":[]},{"level":3,"title":"文件测试运算符","slug":"文件测试运算符","link":"#文件测试运算符","children":[]}]},{"level":2,"title":"判断语句","slug":"判断语句","link":"#判断语句","children":[]},{"level":2,"title":"流程控制","slug":"流程控制","link":"#流程控制","children":[{"level":3,"title":"if 条件控制","slug":"if-条件控制","link":"#if-条件控制","children":[]},{"level":3,"title":"case 条件控制","slug":"case-条件控制","link":"#case-条件控制","children":[]},{"level":3,"title":"for 循环控制","slug":"for-循环控制","link":"#for-循环控制","children":[]},{"level":3,"title":"while 循环控制","slug":"while-循环控制","link":"#while-循环控制","children":[]}]},{"level":2,"title":"read 读取控制台输入","slug":"read-读取控制台输入","link":"#read-读取控制台输入","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"系统函数","slug":"系统函数","link":"#系统函数","children":[]},{"level":3,"title":"自定义函数","slug":"自定义函数","link":"#自定义函数","children":[]}]},{"level":2,"title":"综合案例","slug":"综合案例","link":"#综合案例","children":[]}],"relativePath":"md/linux/shell.md","lastUpdated":1675347501000}'),i={name:"md/linux/shell.md"},D=l(`<h1 id="shell-编程" tabindex="-1">shell 编程 <a class="header-anchor" href="#shell-编程" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>文件开头第一行必须是 <code>#!/bin/bash</code></p></div><h2 id="shell-变量" tabindex="-1">shell 变量 <a class="header-anchor" href="#shell-变量" aria-hidden="true">#</a></h2><p>Linux Shell 中的变量分为<strong>系统变量</strong>和<strong>用户自定义变量</strong></p><p>系统变量如：<code>$HOME</code>、<code>$PWD</code>、<code>$SHELL</code>、<code>$USER</code> 等</p><p>自定义变量在 shell 中定义</p><h3 id="变量的定义" tabindex="-1">变量的定义 <a class="header-anchor" href="#变量的定义" aria-hidden="true">#</a></h3><ul><li><p>基本语法</p><p>定义变量：<code>变量=值</code></p><p>撤销变量：<code>unset 变量</code></p><p>声明静态变量：<code>readonly 变量=值</code>，注意，不能 <code>unset</code></p></li><li><p>定义变量的规则</p><ul><li>变量名称可以由字母、数字和下划线组成，但是不能数字开头</li><li><strong>等号两边不能有空格</strong></li><li>变量名称一般习惯为大写</li></ul></li><li><p>将命令的返回值赋给变量</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">A=</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">ls -la</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">A=</span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">ls -la</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-hidden="true">#</a></h3><ul><li><code>export 变量名=变量值</code>：将 shell 变量输出为环境变量</li><li><code>source 配置文件</code>：让修改后的配置信息立即生效</li><li><code>echo $变量名</code>：查询环境变量的值</li></ul><h3 id="位置参数变量" tabindex="-1">位置参数变量 <a class="header-anchor" href="#位置参数变量" aria-hidden="true">#</a></h3><p>当我们执行一个 shell 脚本时，如果希望获取到命令行的参数信息，就可以使用到位置参数变量，比如：<code>./myshell.sh 100 200</code>，这就是一个执行 shell 的命令，可以在 myshell 脚本中获取到参数信息</p><h4 id="基本语法" tabindex="-1">基本语法 <a class="header-anchor" href="#基本语法" aria-hidden="true">#</a></h4><ul><li><code>$n</code>：<code>n</code> 为数字，<code>$0</code> 表示命令本身，<code>$1</code>-<code>$9</code> 代表第一到第 9 个参数，十以上的参数需要用大括号包含，如<code>\${10}</code></li><li><code>$*</code>：这个变量代表命令行中所有的参数，<code>$*</code> 把所有的参数看成一个整体</li><li><code>$@</code>：也代表命令行中所有的参数，但是把每个参数区分对待</li><li><code>$#</code>：这个变量代表命令行中所有参数的个数</li></ul><h4 id="应用实例" tabindex="-1">应用实例 <a class="header-anchor" href="#应用实例" aria-hidden="true">#</a></h4><p>编写一个 shell 脚本 <a href="http://positionPara.sh" target="_blank" rel="noreferrer">positionPara.sh</a>，在脚本中获取到命令行的各个参数信息</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/bin/bash</span></span>
<span class="line"><span style="color:#676E95;"># 获取到各个参数</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$</span><span style="color:#A6ACCD;">0</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> var </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$</span><span style="color:#A6ACCD;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$</span><span style="color:#A6ACCD;">var</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">done</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">=========================</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> var </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$</span><span style="color:#A6ACCD;">@</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$</span><span style="color:#A6ACCD;">var</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">参数个数=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">#</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@VM-16-2-centos tmp</span><span style="color:#89DDFF;">]</span><span style="color:#676E95;"># vim test.sh</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@VM-16-2-centos tmp</span><span style="color:#89DDFF;">]</span><span style="color:#676E95;"># chmod 744 test.sh </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@VM-16-2-centos tmp</span><span style="color:#89DDFF;">]</span><span style="color:#676E95;"># sh ./test.sh 30 60 90</span></span>
<span class="line"><span style="color:#A6ACCD;">./test.sh 30 60</span></span>
<span class="line"><span style="color:#A6ACCD;">30 60 90</span></span>
<span class="line"><span style="color:#A6ACCD;">=========================</span></span>
<span class="line"><span style="color:#A6ACCD;">30</span></span>
<span class="line"><span style="color:#A6ACCD;">60</span></span>
<span class="line"><span style="color:#A6ACCD;">90</span></span>
<span class="line"><span style="color:#A6ACCD;">参数个数=3</span></span>
<span class="line"></span></code></pre></div><h3 id="预定义变量" tabindex="-1">预定义变量 <a class="header-anchor" href="#预定义变量" aria-hidden="true">#</a></h3><ul><li><code>$$</code>：当前进程的进程号</li><li><code>$!</code>：后台运行的最后一个进程的进程号</li><li><code>$?</code>：最后一次执行的命令的返回状态。如果这个变量的值为 0，证明上一个命令正确执行，如果这个变量的值为非零，则证明上一个命令执行不正确</li></ul><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-hidden="true">#</a></h2><h3 id="运算执行" tabindex="-1">运算执行 <a class="header-anchor" href="#运算执行" aria-hidden="true">#</a></h3><p>运算符的执行主要有三种：</p><ul><li><code>$((运算表达式))</code></li><li><code>$[运算表达式]</code></li><li><code>expr 运算表达式</code></li></ul><h3 id="算数运算符" tabindex="-1">算数运算符 <a class="header-anchor" href="#算数运算符" aria-hidden="true">#</a></h3><p>下表列出了常用的算术运算符，假定变量 a 为 10，变量 b 为 20：</p><p><img src="`+p+'" alt=""></p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><ul><li>条件表达式要放在方括号之间，并且要有空格，例如: <strong><code>[$a==$b]</code></strong> 是错误的，必须写成 <strong><code>[ $a == $b ]</code></strong></li><li><code>expr</code> 表达式中，乘号(<code>*</code>)前边必须加反斜杠(<code>\\</code>)才能实现乘法运算</li></ul></div><h3 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-hidden="true">#</a></h3><p>关系运算符只支持数字，不支持字符串，除非字符串的值是数字。</p><p>下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：</p><p><img src="'+o+'" alt=""></p><h3 id="布尔运算符" tabindex="-1">布尔运算符 <a class="header-anchor" href="#布尔运算符" aria-hidden="true">#</a></h3><p>下表列出了常用的布尔运算符，假定变量 a 为 10，变量 b 为 20：</p><p><img src="'+e+'" alt=""></p><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h3><p>以下介绍 Shell 的逻辑运算符，假定变量 a 为 10，变量 b 为 20:</p><p><img src="'+c+'" alt=""></p><h3 id="字符串运算符" tabindex="-1">字符串运算符 <a class="header-anchor" href="#字符串运算符" aria-hidden="true">#</a></h3><p>下表列出了常用的字符串运算符，假定变量 a 为 &quot;abc&quot;，变量 b 为 &quot;efg&quot;：</p><p><img src="'+t+'" alt=""></p><h3 id="文件测试运算符" tabindex="-1">文件测试运算符 <a class="header-anchor" href="#文件测试运算符" aria-hidden="true">#</a></h3><p><img src="'+r+`" alt=""></p><h2 id="判断语句" tabindex="-1">判断语句 <a class="header-anchor" href="#判断语句" aria-hidden="true">#</a></h2><ul><li><p>基本语法</p><p><code>[ condition ]</code>：注意 condition 前后要有空格</p><p>非空返回 <code>true</code>，可使用 <code>$?</code> 验证(0 为 <code>true</code>，&gt; 1为 <code>false</code>)</p></li><li><p>常用判断条件</p><ul><li>两个整数的比较 <ul><li><strong><code>=</code>：字符串的比较</strong></li><li><code>-lt</code>：小于</li><li><code>-le</code>：小于等于</li><li><code>-eq</code>：等于</li><li><code>-gt</code>：大于</li><li><code>-ge</code>：大于等于</li><li><code>-ne</code>：不等于</li></ul></li><li>按照文件权限进行判断 <ul><li><code>-r</code>：有读的权限</li><li><code>-w</code>：有写的权限</li><li><code>-x</code>：有执行的权限</li></ul></li><li>按照文件类型进行判断 <ul><li><code>-f</code>：文件存在并且是一个常规的文件</li><li><code>-e</code>：文件存在</li><li><code>-d</code>：文件存在并且是一个目录</li></ul></li></ul></li></ul><p>示例</p><ul><li><p>“ok” 是都等于 “ok”</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/bin/bash</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">equal</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">fi</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"></span></code></pre></div></li><li><p>23 是否大于等于 22</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/bin/bash</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> 23 </span><span style="color:#89DDFF;">-gt</span><span style="color:#A6ACCD;"> 22 </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">then</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">大于</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">fi</span></span>
<span class="line"></span></code></pre></div></li><li><p><code>/root/study</code> 目录中的文件是否存在 log.yaml 文件</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/bin/bash</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-e</span><span style="color:#A6ACCD;"> /root/study/log.yaml </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">	exist </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">存在</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">fi</span></span>
<span class="line"></span></code></pre></div><blockquote><p>判断权限也一样，先写 <code>-XXX</code> 后面跟文件地址</p></blockquote></li></ul><h2 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-hidden="true">#</a></h2><h3 id="if-条件控制" tabindex="-1">if 条件控制 <a class="header-anchor" href="#if-条件控制" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> 条件判断式 </span><span style="color:#89DDFF;">];</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">	程序</span></span>
<span class="line"><span style="color:#89DDFF;">fi</span></span>
<span class="line"><span style="color:#676E95;"># 或者下面这种，推荐使用下面这种</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> 条件判断式 </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">then</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	程序</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">elif</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> 条件判断式 </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">      程序</span></span>
<span class="line"><span style="color:#89DDFF;">fi</span></span>
<span class="line"></span></code></pre></div><h3 id="case-条件控制" tabindex="-1">case 条件控制 <a class="header-anchor" href="#case-条件控制" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">变量名</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">值1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">	 </span><span style="color:#676E95;"># 程序1</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">值2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">	 </span><span style="color:#676E95;"># 程序2</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#89DDFF;">	 </span><span style="color:#676E95;"># ......</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">*)</span></span>
<span class="line"><span style="color:#89DDFF;">	 </span><span style="color:#676E95;"># 默认执行程序</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#89DDFF;">esac</span></span>
<span class="line"></span></code></pre></div><h3 id="for-循环控制" tabindex="-1">for 循环控制 <a class="header-anchor" href="#for-循环控制" aria-hidden="true">#</a></h3><ul><li><p>语法一</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> 变量 </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> 值1 值2 值3</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">        程序</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">done</span></span>
<span class="line"></span></code></pre></div></li><li><p>语法二</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">for</span><span style="color:#89DDFF;">((</span><span style="color:#C3E88D;">初始值;循环控制条件;变量变化</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">		程序</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">done</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="while-循环控制" tabindex="-1">while 循环控制 <a class="header-anchor" href="#while-循环控制" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> 条件判断式 </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">  		程序</span></span>
<span class="line"><span style="color:#A6ACCD;">  	</span><span style="color:#89DDFF;">done</span></span>
<span class="line"></span></code></pre></div><h2 id="read-读取控制台输入" tabindex="-1">read 读取控制台输入 <a class="header-anchor" href="#read-读取控制台输入" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">read</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">参数</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>选项：</p><ul><li><code>-p</code>：指定读取时的提示符</li><li><code>-t</code>：指定读取值时等待的时间（秒），如果没有在指定的时间内输入，就不再等待了</li></ul><p>参数：</p><ul><li>变量，指定读取值的变量名</li></ul><p>【案例 】读取控制台输入一个 num 值，在 10 秒内输入</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/bin/bash</span></span>
<span class="line"><span style="color:#82AAFF;">read</span><span style="color:#A6ACCD;"> -t 10 -p </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入一个数 num = </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> NUM</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你输入的值时num=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">NUM</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-hidden="true">#</a></h2><p>shell 编程和其它编程语言一样，有系统函数，也可以自定义函数。</p><h3 id="系统函数" tabindex="-1">系统函数 <a class="header-anchor" href="#系统函数" aria-hidden="true">#</a></h3><ul><li><strong>basename</strong>：返回完整路径最后 / 的部分，常用于获取文件名</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">basename </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">pathcname</span><span style="color:#89DDFF;">][</span><span style="color:#A6ACCD;">suffix</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># basename命令会删掉所有的前缀包括最后一个 / 字符，然后将字符串显示出来</span></span>
<span class="line"><span style="color:#A6ACCD;">basename </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">][</span><span style="color:#A6ACCD;">suffix</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"></span></code></pre></div><blockquote><p>suffix 为后缀，如果指定了 suffix，basename 会将pathname 或 string 中的 suffix 去掉</p></blockquote><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">basename /home/aaa/test.txt .txt  </span><span style="color:#676E95;"># 输出test</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>dirname</strong>：返回完整路径最后 / 的前面的部分，常用于返回路径部分</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">dirname /home/aaa/test.txt  </span><span style="color:#676E95;"># 输出/home/aaa</span></span>
<span class="line"></span></code></pre></div><h3 id="自定义函数" tabindex="-1">自定义函数 <a class="header-anchor" href="#自定义函数" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">function</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">funname[</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">]{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	Action</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">return value</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>调用使用 <code>funname [值]</code>，要传参也是用 <code>$1</code>、<code>$2</code> 等这些取</p><p>示例</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/bin/bash</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getSum(){</span></span>
<span class="line"><span style="color:#A6ACCD;">	SUM=$</span><span style="color:#89DDFF;">[$</span><span style="color:#A6ACCD;">n1+</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">n2</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SUM=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">SUM</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#82AAFF;">read</span><span style="color:#A6ACCD;"> -p </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入第一个数 n1：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> n1</span></span>
<span class="line"><span style="color:#82AAFF;">read</span><span style="color:#A6ACCD;"> -p </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入第二个数 n2：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> n2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">getSum </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">n1 </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">n2</span></span>
<span class="line"></span></code></pre></div><h2 id="综合案例" tabindex="-1">综合案例 <a class="header-anchor" href="#综合案例" aria-hidden="true">#</a></h2><ul><li>每天凌晨 2:10 备份数据库 myDB 到 /data/backup/db</li><li>备份开始和备份结束能够给出相应的提示信息</li><li>备份后的文件要求以备份时间为文件名，并打包成 <code>.tar.gz</code> 的形式，比如 <em>2022-02-02_230201.tar.gz</em></li><li>在备份的同时，检查是否有十天前备份的数据库文件，如果有就将其删除</li></ul><p><strong>【mysql_db_backup.sh】</strong></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 完成数据库的定时备份</span></span>
<span class="line"><span style="color:#676E95;"># 备份的路径</span></span>
<span class="line"><span style="color:#A6ACCD;">BACKUP=/data/backup/db</span></span>
<span class="line"><span style="color:#676E95;">#当前的时间作为文件名</span></span>
<span class="line"><span style="color:#A6ACCD;">DATETIME=</span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">date +%Y_%m_%d_%H%M%S</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">===============开始备份===============</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">====备份的数据路径是 </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">BACKUP</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME</span><span style="color:#C3E88D;">.tar.gz</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 主机</span></span>
<span class="line"><span style="color:#A6ACCD;">HOST=localhost</span></span>
<span class="line"><span style="color:#676E95;"># 用户名</span></span>
<span class="line"><span style="color:#A6ACCD;">DB_USER=root</span></span>
<span class="line"><span style="color:#676E95;"># 密码</span></span>
<span class="line"><span style="color:#A6ACCD;">DB_PWD=</span><span style="color:#89DDFF;">*********</span></span>
<span class="line"><span style="color:#676E95;"># 数据库名</span></span>
<span class="line"><span style="color:#A6ACCD;">DATABASE=myDB</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 创建备份的路径</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;$</span><span style="color:#A6ACCD;">BACKUP</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> mkdir -p </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">BACKUP/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 执行 mysql 的备份指令</span></span>
<span class="line"><span style="color:#A6ACCD;">mysqldump -u</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">DB_USER</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> -p</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">DB_PWD</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> --host=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">HOST </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATABASE </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> gzip </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">BACKUP/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME.sql.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 打包备份文件</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">BACKUP</span></span>
<span class="line"><span style="color:#A6ACCD;">tar -zcvf </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME.tar.gz </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 删除临时目录</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf  </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">BACKUP/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">DATETIME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 删除 10 天前的备份文件</span></span>
<span class="line"><span style="color:#A6ACCD;">find </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">BACKUP -mtime +10 -name </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*.tar.gz</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> -exec rm -rf {} \\;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">=====备份成功</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>然后执行：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">crontab -e</span></span>
<span class="line"></span></code></pre></div><p>里面编辑</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">10 2 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> /usr/sbin/mysql_db_backup.sh</span></span>
<span class="line"></span></code></pre></div>`,86),y=[D];function d(C,A,F,h,u,g){return a(),n("div",null,y)}const f=s(i,[["render",d]]);export{E as __pageData,f as default};
