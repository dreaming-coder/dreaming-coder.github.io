import{_ as s,o as l,c as a,a as n}from"./app.f6787dd1.js";const e="/imgs/linux/linux-1.png",p="/imgs/linux/linux-2.png",o="/imgs/linux/linux-3.png",c="/imgs/linux/linux-4.png",t="/imgs/linux/linux-5.png",i="/imgs/linux/linux-6.png",d="/imgs/linux/linux-7.png",r="/imgs/linux/linux-8.png",y="/imgs/linux/linux-9.png",h="/imgs/linux/linux-10.png",u="/imgs/linux/linux-11.png",C="/imgs/linux/linux-12.png",_=JSON.parse('{"title":"Linux 基础","description":"","frontmatter":{},"headers":[{"level":2,"title":"Linux 的目录结构","slug":"linux-的目录结构","link":"#linux-的目录结构","children":[]},{"level":2,"title":"关机与重启","slug":"关机与重启","link":"#关机与重启","children":[]},{"level":2,"title":"用户管理","slug":"用户管理","link":"#用户管理","children":[{"level":3,"title":"新增用户","slug":"新增用户","link":"#新增用户","children":[]},{"level":3,"title":"删除用户","slug":"删除用户","link":"#删除用户","children":[]},{"level":3,"title":"用户注销","slug":"用户注销","link":"#用户注销","children":[]},{"level":3,"title":"查询用户信息","slug":"查询用户信息","link":"#查询用户信息","children":[]},{"level":3,"title":"切换用户","slug":"切换用户","link":"#切换用户","children":[]},{"level":3,"title":"综合示例","slug":"综合示例","link":"#综合示例","children":[]}]},{"level":2,"title":"用户组管理","slug":"用户组管理","link":"#用户组管理","children":[{"level":3,"title":"新增组","slug":"新增组","link":"#新增组","children":[]},{"level":3,"title":"删除组","slug":"删除组","link":"#删除组","children":[]},{"level":3,"title":"添加用户时直接加上组","slug":"添加用户时直接加上组","link":"#添加用户时直接加上组","children":[]},{"level":3,"title":"修改用户的组","slug":"修改用户的组","link":"#修改用户的组","children":[]},{"level":3,"title":"用户和组的相关文件","slug":"用户和组的相关文件","link":"#用户和组的相关文件","children":[]}]},{"level":2,"title":"Linux 实用指令","slug":"linux-实用指令","link":"#linux-实用指令","children":[{"level":3,"title":"指定运行级别","slug":"指定运行级别","link":"#指定运行级别","children":[]},{"level":3,"title":"帮助指令","slug":"帮助指令","link":"#帮助指令","children":[]},{"level":3,"title":"文件目录类","slug":"文件目录类","link":"#文件目录类","children":[]},{"level":3,"title":"时间日期类","slug":"时间日期类","link":"#时间日期类","children":[]},{"level":3,"title":"搜索查找类","slug":"搜索查找类","link":"#搜索查找类","children":[]},{"level":3,"title":"压缩和解压类","slug":"压缩和解压类","link":"#压缩和解压类","children":[]}]},{"level":2,"title":"Linux 组管理和权限管理","slug":"linux-组管理和权限管理","link":"#linux-组管理和权限管理","children":[{"level":3,"title":"修改文件用户和用户组","slug":"修改文件用户和用户组","link":"#修改文件用户和用户组","children":[]},{"level":3,"title":"文件权限","slug":"文件权限","link":"#文件权限","children":[]},{"level":3,"title":"修改权限","slug":"修改权限","link":"#修改权限","children":[]}]},{"level":2,"title":"定时任务调用","slug":"定时任务调用","link":"#定时任务调用","children":[{"level":3,"title":"域取值","slug":"域取值","link":"#域取值","children":[]},{"level":3,"title":"特殊字符","slug":"特殊字符","link":"#特殊字符","children":[]},{"level":3,"title":"取值示例","slug":"取值示例","link":"#取值示例","children":[]}]},{"level":2,"title":"Linux 分区","slug":"linux-分区","link":"#linux-分区","children":[{"level":3,"title":"分区基础知识","slug":"分区基础知识","link":"#分区基础知识","children":[]},{"level":3,"title":"Linux 分区","slug":"linux-分区-1","link":"#linux-分区-1","children":[]}]},{"level":2,"title":"Linux 进程管理","slug":"linux-进程管理","link":"#linux-进程管理","children":[{"level":3,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":3,"title":"进程相关操作","slug":"进程相关操作","link":"#进程相关操作","children":[]},{"level":3,"title":"服务管理","slug":"服务管理","link":"#服务管理","children":[]},{"level":3,"title":"chkconfig 指令","slug":"chkconfig-指令","link":"#chkconfig-指令","children":[]},{"level":3,"title":"进程监控","slug":"进程监控","link":"#进程监控","children":[]}]}],"relativePath":"md/linux/linux-start.md","lastUpdated":1674643416000}'),g={name:"md/linux/linux-start.md"},D=n('<h1 id="linux-基础" tabindex="-1">Linux 基础 <a class="header-anchor" href="#linux-基础" aria-hidden="true">#</a></h1><h2 id="linux-的目录结构" tabindex="-1">Linux 的目录结构 <a class="header-anchor" href="#linux-的目录结构" aria-hidden="true">#</a></h2><p><img src="'+e+`" alt=""></p><ul><li><p><code>/bin</code></p><p>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令</p></li><li><p><code>/boot</code></p><p>这里存放的是启动 Linux 时使用的一些核心文件，包括一些链接文件以及镜像文件</p></li><li><p><code>/dev</code></p><p>dev 是 Device(设备) 的缩写，该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的</p></li><li><p><code>/etc</code></p><p>etc 是 Etcetera(等等) 的缩写，这个目录用来存放所有的系统管理所需要的配置文件和子目录</p></li><li><p><code>/home</code></p><p>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve</p></li><li><p><code>/lib</code></p><p>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库</p></li><li><p><code>/lost+found</code></p><p>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件</p></li><li><p><code>/media</code></p><p>Linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下</p></li><li><p><code>/mnt</code></p><p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在<code>/mnt/</code>上，然后进入该目录就可以查看光驱里的内容了</p></li><li><p><code>/opt</code></p><p>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个 ORACLE 数据库则就可以放到这个目录下。默认是空的</p></li><li><p><code>/proc</code></p><p>proc 是 Processes(进程) 的缩写，<code>/proc</code> 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息</p></li><li><p><code>/root</code></p><p>该目录为系统管理员，也称作超级权限者的用户主目录</p></li><li><p><code>/sbin</code></p><p>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序</p></li><li><p><code>/selinux</code></p><p>这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的</p></li><li><p><code>/srv</code></p><p>该目录存放一些服务启动之后需要提取的数据</p></li><li><p><code>/sys</code></p><p>这是Linux 2.6内核的一个很大的变化，暂时不用管</p></li><li><p><code>/tmp</code></p><p>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的</p></li><li><p><code>/usr</code></p><p>usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录</p></li><li><p><code>/usr/bin</code></p><p>系统用户使用的应用程序</p></li><li><p><code>/usr/sbin</code></p><p>超级用户使用的比较高级的管理程序和系统守护程序</p></li><li><p><code>/usr/src</code></p><p>内核源代码默认的放置目录</p></li><li><p><code>/var</code></p><p>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件</p></li><li><p><code>/run</code></p><p>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 <code>/var/run</code> 目录，应该让它指向 run</p></li></ul><h2 id="关机与重启" tabindex="-1">关机与重启 <a class="header-anchor" href="#关机与重启" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">shutdown -h 10             </span><span style="color:#676E95;"># 10分钟后关机</span></span>
<span class="line"><span style="color:#A6ACCD;">shutdown -h 00:00          </span><span style="color:#676E95;"># 今夜零点关机</span></span>
<span class="line"><span style="color:#A6ACCD;">shutdown -h now            </span><span style="color:#676E95;"># 立即关机</span></span>
<span class="line"><span style="color:#A6ACCD;">shutdown -h 10 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">字符串</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;"># 用于发送给所有登录用户，解释关机原因及安排</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 将 -h 替换为 -r 就表示为重启，其他用法相同</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">shutdown -c                </span><span style="color:#676E95;"># 取消关机命令</span></span>
<span class="line"></span></code></pre></div><blockquote><p>还有一些指令也有关机功能（尽量少用）：</p><ul><li><code>reboot</code>：等于<code>shutdown -r now</code></li><li><code>halt</code>：等于<code>shutdown -h now</code></li></ul></blockquote><p>另外还有个特殊的命令 <code>sync</code>，最好再关机重启之前都执行一下这条指令，将内存的数据写入磁盘，防止数据丢失</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">sync </span><span style="color:#676E95;"># 把内存的数据同步到磁盘</span></span>
<span class="line"></span></code></pre></div><h2 id="用户管理" tabindex="-1">用户管理 <a class="header-anchor" href="#用户管理" aria-hidden="true">#</a></h2><h3 id="新增用户" tabindex="-1">新增用户 <a class="header-anchor" href="#新增用户" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">useradd 用户名     </span><span style="color:#676E95;"># 创建新用户</span></span>
<span class="line"><span style="color:#A6ACCD;">passwd 用户名      </span><span style="color:#676E95;"># 为新用户指定密码</span></span>
<span class="line"></span></code></pre></div><h3 id="删除用户" tabindex="-1">删除用户 <a class="header-anchor" href="#删除用户" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">userdel -r 用户名</span></span>
<span class="line"></span></code></pre></div><p>只有一个参数可选 <code>-r</code> ；如果加参数 <code>-r </code>，表示在删除用户的同时，一并把用户的家目录及本地邮件存储的目录或文件也一同删除</p><h3 id="用户注销" tabindex="-1">用户注销 <a class="header-anchor" href="#用户注销" aria-hidden="true">#</a></h3><p>注销当前用户，断开当前连接</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">logout</span></span>
<span class="line"></span></code></pre></div><blockquote><p>图形运行级别该命令无效</p></blockquote><h3 id="查询用户信息" tabindex="-1">查询用户信息 <a class="header-anchor" href="#查询用户信息" aria-hidden="true">#</a></h3><p>基本语法：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">id 用户名</span></span>
<span class="line"></span></code></pre></div><p>查看当前用户：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">whoami</span></span>
<span class="line"></span></code></pre></div><h3 id="切换用户" tabindex="-1">切换用户 <a class="header-anchor" href="#切换用户" aria-hidden="true">#</a></h3><p>语法：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">su - 用户名</span></span>
<span class="line"></span></code></pre></div><blockquote><p>低权限到高权限用户需要输入密码验证</p></blockquote><blockquote><p>从切换的用户退出到原来的用户可以使用 <code>exit</code> 命令</p></blockquote><h3 id="综合示例" tabindex="-1">综合示例 <a class="header-anchor" href="#综合示例" aria-hidden="true">#</a></h3><p><img src="`+p+`" alt=""></p><h2 id="用户组管理" tabindex="-1">用户组管理 <a class="header-anchor" href="#用户组管理" aria-hidden="true">#</a></h2><p>用户组类似于角色，系统可以对有共性的多个用户进行统一的管理</p><h3 id="新增组" tabindex="-1">新增组 <a class="header-anchor" href="#新增组" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">groupadd 组名</span></span>
<span class="line"></span></code></pre></div><h3 id="删除组" tabindex="-1">删除组 <a class="header-anchor" href="#删除组" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">groupdel 组名</span></span>
<span class="line"></span></code></pre></div><h3 id="添加用户时直接加上组" tabindex="-1">添加用户时直接加上组 <a class="header-anchor" href="#添加用户时直接加上组" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">useradd -g 用户组 用户名</span></span>
<span class="line"></span></code></pre></div><h3 id="修改用户的组" tabindex="-1">修改用户的组 <a class="header-anchor" href="#修改用户的组" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">usermod -g 用户组 用户名</span></span>
<span class="line"></span></code></pre></div><p>注意，<code>usermod</code> 命令的参数还有很多：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">usermod </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-u uid </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-o</span><span style="color:#89DDFF;">]]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-g group</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-G group,...</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-d 主目录 </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-m</span><span style="color:#89DDFF;">]]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-s shell</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-c 注释</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-l 新名称</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-f 失效日</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-e 过期日</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-p 密码</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-L</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">-U</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 用户名</span></span>
<span class="line"></span></code></pre></div><p><code>usermod </code> 命令会参照你命令列上指定的部份修改系统帐号档。下列为 <code>usermod </code> 可选用的参数：</p><ul><li><p><code>-c</code></p><p>comment</p><p>更新用户帐号 password 档中的注解栏，一般是使用 <code>chfn(1)</code> 来修改</p></li><li><p><code>-d</code></p><p>home_dir</p><p>更新用户新的登入目录。如果给定 <code>-m</code> 选项，用户旧目录会搬到新的目录去，如旧目录不存在则建个新的</p></li><li><p><code>-e</code></p><p>expire_date</p><p>用户帐号停止日期，日期格式为 <code>MM/DD/YY</code></p></li><li><p><code>-f</code></p><p>inactive_days</p><p>帐号过期几日后永久停权，当值为 0 时帐号则立刻被停权，当值为 -1 时则关闭此功能。预设值为 -1</p></li><li><p><code>-g</code></p><p>initial_group</p><p>更新用户新的起始登入用户组。<strong>用户组名须已存在</strong>。用户组 ID 必须参照既有的的用户组。用户组 ID 预设值为 1</p></li><li><p><code>-G</code></p><p>group, [...]</p><p>定义用户为一堆 groups 的成员。每个用户组使用 <code>, </code> 区格开来，不可以夹杂空白字元。用户组名同 <code>-g</code> 选项的限制。如果用户现在的用户组不再此列，则将用户由该用户组中移除</p></li><li><p><code>-l</code></p><p>login_name</p><p>变更用户 login 时的名称为 login_name，其它不变。特别是，用户目录名应该也会跟着更动成新的登入名</p></li><li><p><code>-s</code></p><p>指定新登入 shell。如此栏留白，系统将选用系统预设 shell</p></li><li><p><code>-u</code></p><p>必须为唯一的ID值，除非用 <code>-o </code> 选项。数字不可为负值。预设为最小不得小于 <code>/etc/login.defs</code> 中定义的 <code>UID_MIN</code> 值。<code>0</code> 到 <code>UID_MIN</code> 值之间是传统上保留给系统帐号使用。用户目录树下所有的档案目录其 userID 会自动改变。放在用户目录外的档案则要自行手动更动</p></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li><p><code>usermod </code> 不允许你改变正在线上的用户帐号名称。当 <code>usermod </code> 用来改变 userID，必须确认这名 user 没在电脑上执行任何程序。</p></li><li><p><code>usermod</code> 工具和 <code>useradd</code> 的参数差不多；两者不同之处在于 <code>useradd </code>是添加，<code>usermod </code>是修改。</p></li></ul></div><p><img src="`+o+`" alt=""></p><h3 id="用户和组的相关文件" tabindex="-1">用户和组的相关文件 <a class="header-anchor" href="#用户和组的相关文件" aria-hidden="true">#</a></h3><ul><li><p><strong>/etc/passwd</strong> 文件</p><p>用户的配置文件，记录用户的各种信息</p><p>每行的含义：<code>用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录shell</code></p></li><li><p><strong>/etc/shadow</strong> 文件</p><p>口令配置文件</p><p>每行的含义：<strong>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</strong></p></li><li><p><strong>/etc/group</strong> 文件</p><p>用户组的配置文件，记录 Linux 包含的组信息</p><p>每行含义：<strong>组名:口令:组标识号:组内用户列表</strong></p></li></ul><h2 id="linux-实用指令" tabindex="-1">Linux 实用指令 <a class="header-anchor" href="#linux-实用指令" aria-hidden="true">#</a></h2><h3 id="指定运行级别" tabindex="-1">指定运行级别 <a class="header-anchor" href="#指定运行级别" aria-hidden="true">#</a></h3><ul><li><code>0</code>：关机</li><li><code>1</code>：单用户（找回丢失密码）</li><li><code>2</code>：多用户无网络服务</li><li><code>3</code>：多用户有网络服务</li><li><code>4</code>：保留</li><li><code>5</code>：图形界面</li><li><code>6</code>：重启</li></ul><p>常用的运行级别是 3 和 5，要修改默认的运行级别可修改配置文件，系统的运行级别的配置文件是：<code>/etc/inittab</code></p><p>还有切换到指定运行级别的指令：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">init </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">0123456</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p><strong>【面试题】如何找回 root 用户密码</strong></p><p>【思路】进入到单用户模式，然后修改 root 密码。因为进入到单用户模式，root 不需要密码就可以登录</p><ul><li>第一步：在开机时，见到如下界面，输入<kbd>e</kbd> 进入引导设置界面</li></ul><p><img src="`+c+'" alt=""></p><ul><li>第二步：输入<kbd>e</kbd>进行设置编辑</li></ul><p><img src="'+t+'" alt=""></p><ul><li>第三步：将光标定位到第二行，输入<kbd>e</kbd> 进行编辑</li></ul><p><img src="'+i+'" alt=""></p><ul><li>第四步：输入<code> 1</code> 表明要进入到单户模式，然后回车，退回到上一步的界面</li></ul><p><img src="'+d+'" alt=""></p><ul><li>第五步：输入<kbd>b</kbd> 开始引导启动 Linux，此时进入之后的界面如下图所示</li></ul><p><img src="'+r+`" alt=""></p><ul><li>第六步：输入命令 <code>passwd root</code> 进行修改密码，之后输入命令 <code>init 5</code> 进入图形界面级别或者 <code>init 3</code> 进入多用户有网络服务级别运行</li></ul><h3 id="帮助指令" tabindex="-1">帮助指令 <a class="header-anchor" href="#帮助指令" aria-hidden="true">#</a></h3><p>当我们对某个指令不熟悉时，我们可以使用 Linux 提供的帮助指令来了解这个指令的使用方法</p><ul><li><strong>man</strong></li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">man </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">命令或配置文件</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;"># 获得帮助信息</span></span>
<span class="line"></span></code></pre></div><ul><li><strong>help</strong></li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">help</span><span style="color:#A6ACCD;"> 命令              </span><span style="color:#676E95;"># 获得shell内置命令的帮助信息</span></span>
<span class="line"></span></code></pre></div><h3 id="文件目录类" tabindex="-1">文件目录类 <a class="header-anchor" href="#文件目录类" aria-hidden="true">#</a></h3><ul><li><p><strong>pwd</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">pwd</span></span>
<span class="line"></span></code></pre></div><p>显示当前工作目录的绝对路径</p></li><li><p><strong>ls</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">ls </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">目录或是文件</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>常用选项：</p><ul><li><code>-a</code>：显示当前目录所有的文件和目录，包括隐藏的</li><li><code>-l</code>：以列表方式显示信息</li></ul></li><li><p><strong>cd</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">参数</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;"># 切换到指定目录</span></span>
<span class="line"></span></code></pre></div><p>常用参数：</p><ul><li>绝对路径和相对路径 <code>cd ~</code> 或者<code>cd</code>：回到自己的家目录 <code>cd ..</code> ：货到当前目录的上一级目录</li></ul></li><li><p><strong>mkdir</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">mkdir </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 要创建的目录</span></span>
<span class="line"></span></code></pre></div><p>常用选项：<code>-p</code>，用于创建多级目录</p><p>例如：</p><ul><li>创建一个目录：<code>mkdir dog</code></li><li>创建多级目录：<code>mkdir -p animal/cat</code></li></ul></li><li><p><strong>rmdir</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">rmdir </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 要删除的空目录</span></span>
<span class="line"></span></code></pre></div><p>【注意】 该命令删除的是空目录，如目录下有内容时是无法删除的，如果要删除非空目录，需要使用 <code>rm -rf 要删除的目录</code></p></li><li><p><strong>touch</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">touch 文件名称列表</span></span>
<span class="line"></span></code></pre></div><p>创建指定文件名称的空文件，可以是多个文件一起创建</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">touch a.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">touch b.txt c.txt d.txt</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>cp</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">cp </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> src dest</span></span>
<span class="line"></span></code></pre></div><p>将文件拷贝到指定目录</p><p>常用选项：<code>-r</code>，递归复制整个文件夹，如：<code>cp -r 源目录 目标目录</code></p></li><li><p><strong>rm</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">rm </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 要删除的文件或目录</span></span>
<span class="line"></span></code></pre></div><p>常用选项：</p><ul><li><code>-r</code>：递归删除整个文件夹</li><li><code>-f</code>：强制删除不提示</li></ul></li><li><p><strong>mv</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">mv oldNameFile newNameFile        </span><span style="color:#676E95;"># 重命名</span></span>
<span class="line"><span style="color:#A6ACCD;">mv /temp/movefile /targetFolder   </span><span style="color:#676E95;"># 移动文件</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>basename</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">basename /usr/local/nginx/site/avatar.png </span><span style="color:#676E95;"># avatar.png</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>dirname</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">dirname /usr/local/nginx/site/avatar.png </span><span style="color:#676E95;"># /usr/local/nginx/site</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>cat</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">cat </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 要查看的文件</span></span>
<span class="line"></span></code></pre></div><p>常用选项：<code>-n</code>，显示行号，只能浏览，不能修改，通常通过管道指令和 <code>more</code> 一起使用，实现分页查看，如：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">cat -n hello.txt </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> more</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>more</strong> 指令</p><p><code>more</code> 指令是一个基于VIM编辑器的文本过滤器，它以全屏的方式按页显示文本文件的内容</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">more 要查看的文件</span></span>
<span class="line"></span></code></pre></div></li></ul><p>进入 <code>more</code> 打开的文件后，可以执行如下操作：</p><blockquote><ul><li><kbd>Space</kbd>：向下翻『一页』</li><li><kbd>Enter</kbd>：向下翻『一行』</li><li><kbd>Q</kbd>：立刻离开 <code>more</code>，不再显示该文件内容</li><li><kbd>Ctrl</kbd>+<kbd>F</kbd>：向下滚动一屏</li><li><kbd>=</kbd>：输出当前行号</li></ul></blockquote><ul><li><p><strong>less</strong> 指令</p><p>与 <code>more</code> 类似，但是比它强大很多，支持各种显示终端</p><p><code>less</code> 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载的内容，对于大型文件具有较高的效率</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">less 要查看的文件</span></span>
<span class="line"></span></code></pre></div><p>进入 <code>less</code> 打开的文件后，可以执行如下操作：</p><blockquote><ul><li><kbd>Space</kbd>：向下翻『一页』</li><li><kbd>Enter</kbd>：向下翻『一行』</li><li><kbd>PgUp</kbd>：向上翻『一页』</li><li><kbd>PgDn</kbd>：向下翻『一页』</li><li><kbd>/</kbd>+字符串：向下搜索字符串的内容 <ul><li><kbd>N</kbd>：向下查找</li><li><kbd>Shift</kbd>+<kbd>N</kbd>：向上查找</li></ul></li><li><kbd>?</kbd>+字符串：向下搜索字符串的内容 <ul><li><kbd>N</kbd>：向下查找</li><li><kbd>Shift</kbd>+<kbd>N</kbd>：向上查找</li></ul></li><li><kbd>Q</kbd>：立刻离开 <code>less</code>，不再显示该文件内容</li><li><kbd>=</kbd>：输出当前行号</li></ul></blockquote></li><li><p><strong>&gt;</strong> 指令和 <strong>&gt;&gt;</strong> 指令</p><p><code>&gt;</code> 表示输出重定向，<code>&gt;&gt;</code> 表示追加</p><p>【示例】</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">ls -l </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> a.txt             </span><span style="color:#676E95;"># 列表的内容写入文件 a.txt 中（覆盖写）</span></span>
<span class="line"><span style="color:#A6ACCD;">ls -al </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> b.txt           </span><span style="color:#676E95;"># 列表的内容追加到文件 b.txt 的末尾</span></span>
<span class="line"><span style="color:#A6ACCD;">cat 文件1 </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> 文件2          </span><span style="color:#676E95;"># 将文件1的内容覆盖到文件2</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">内容</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> 文件        </span><span style="color:#676E95;"># 输入文本到文件末尾</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>echo</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 输出内容</span></span>
<span class="line"></span></code></pre></div><p>输出内容到控制台</p></li><li><p><strong>head</strong> 指令</p><p><code>head</code> 用于显示文件的开头部分内容，默认情况下显示前 10 行的内容</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">head 文件        </span><span style="color:#676E95;"># 查看文件前 10 行的内容</span></span>
<span class="line"><span style="color:#A6ACCD;">head -n 5 文件   </span><span style="color:#676E95;"># 查看文件前 5 行的内容</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>tail</strong> 指令</p><p><code>tail</code> 用于显示文件的尾部部分的内容，默认情况下显示后 10 行的内容</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tail 文件       </span><span style="color:#676E95;"># 显示文件后 10 行的内容</span></span>
<span class="line"><span style="color:#A6ACCD;">tail -n 5 文件  </span><span style="color:#676E95;"># 显示文件后 5 行的内容</span></span>
<span class="line"><span style="color:#A6ACCD;">tail -f 文件    </span><span style="color:#676E95;"># 实时追踪该文档的所有更新，经常用来截取日志</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>ln</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">ln </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-s</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">原文件或目录</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">软连接名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">           </span><span style="color:#676E95;"># 给原文件创建一个链接</span></span>
<span class="line"><span style="color:#A6ACCD;">ln –snf  </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">新的源文件或目录</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">软链接文件</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;"># 修改软链接</span></span>
<span class="line"><span style="color:#A6ACCD;">rm –rf   ./软链接名称          </span><span style="color:#676E95;"># 删除软链接的名称（正确用法）</span></span>
<span class="line"><span style="color:#A6ACCD;">rm –rf   ./软链接名称/         </span><span style="color:#676E95;"># 这样就会把软链接以及软链接指向下的内容删除，慎重！</span></span>
<span class="line"></span></code></pre></div><blockquote><p><code>-s</code> 是代号（symbolic）的意思。这里有两点要注意：</p><ul><li><code>ln</code> 命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化</li><li><code>ln</code> 的链接有<strong>软链接</strong>和<strong>硬链接</strong>两种，软链接就是 <code>ln -s xxx xxx</code> ,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接<code>ln xxx xxx</code>,没有参数 <code>-s</code>, 它会在你选定的位置上生成一个和源文件大小相同的文件</li></ul><p><strong>无论是软链接还是硬链接，文件都保持同步变化，都不会将原本的档案复制一份，只会占用非常少量的磁碟空间</strong></p></blockquote><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>【硬链接】</strong></p><p>硬链接指通过索引节点来进行连接。在 Linux 的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬链接。硬链接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬链接到重要文件，以防止”误删“的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的链接。<strong>只删除一个链接并不影响索引节点本身和其它的链接，只有当最后一个链接被删除后，文件的数据块及目录的连接才会被释放</strong>。也就是说，文件真正删除的条件是与之相关的所有硬链接文件均被删除。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>【软链接】</strong></p><p>软链接文件有类似于 Windows 的快捷方式。它实际上是一个特殊的文件。在软连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。</p></div><blockquote><p><strong>【两种链接的区别】</strong></p><p>硬链接文件有两个限制：</p><ul><li><strong>不允许给目录创建硬链接</strong></li><li><strong>只有在同一文件系统中的文件之间才能创建链接，而且只有超级用户才有建立硬链接权限</strong></li></ul><p>对硬链接文件进行读写和删除操作时候，结果和软链接相同。但如果我们删除硬链接文件的源文件，硬链接文件仍然存在，而且保留了原有的内容。其原因是因为对应的文件的索引节点有一个以上的链接。只删除一个链接并不影响索引节点本身和其它的链接，只有当最后一个链接被删除后，文件的数据块及目录的链接才会被释放。文件才会被真正删除。</p><p>软链接没有硬链接以上的两个限制，因而现在更为广泛使用，它具有更大的灵活性，甚至可以跨越不同机器、不同网络对文件进行链接。但是软链接的缺点在于：因为链接文件包含有原文件的路径信息，所以当原文件从一个目录下移到其他目录中，再访问链接文件，系统就找不到了，而硬链接就没有这个缺陷，你想怎么移就怎么移；还有它要系统分配额外的空间用于建立新的索引节点和保存原文件的路径。</p></blockquote><p>【示例】在 <code>/home</code> 目录下创建一个软链接 linkToRoot，链接到 <code>/root</code> 目录，之后删除该软链接</p><ul><li><p>创建软链接</p><p><img src="`+y+'" alt=""></p></li><li><p>删除软链接</p><p><img src="'+h+`" alt=""></p></li></ul></li><li><p><strong>history</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">history</span><span style="color:#A6ACCD;">                 </span><span style="color:#676E95;"># 查看已经执行过的历史命令</span></span>
<span class="line"><span style="color:#82AAFF;">history</span><span style="color:#A6ACCD;"> 10              </span><span style="color:#676E95;"># 查看最近执行过的 10 条命令</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="时间日期类" tabindex="-1">时间日期类 <a class="header-anchor" href="#时间日期类" aria-hidden="true">#</a></h3><ul><li><p><strong>date</strong> 指令</p><p><strong>【查看日期】</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">date                            </span><span style="color:#676E95;"># 显示当前时间</span></span>
<span class="line"><span style="color:#A6ACCD;">date </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">+%Y</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">                      </span><span style="color:#676E95;"># 显示当前年份（四位数）</span></span>
<span class="line"><span style="color:#A6ACCD;">date </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">+%m</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">                      </span><span style="color:#676E95;"># 显示当前月份</span></span>
<span class="line"><span style="color:#A6ACCD;">date </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">+%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">                      </span><span style="color:#676E95;"># 显示当前是哪一天（两位数）</span></span>
<span class="line"><span style="color:#A6ACCD;">date </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">+%Y-%m-%d %H:%M:%S</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;"># 显示当前日期和时间</span></span>
<span class="line"></span></code></pre></div><p><strong>【设置日期】</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">date -s 字符串时间</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">date -s </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2020-10-10 11:11:11</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>cal</strong> 指令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">cal                    </span><span style="color:#676E95;"># 显示当前日历</span></span>
<span class="line"><span style="color:#A6ACCD;">cal 2020               </span><span style="color:#676E95;"># 显示 2020 年的日历，光标没有定位到哪一天</span></span>
<span class="line"><span style="color:#A6ACCD;">cal 9 2021             </span><span style="color:#676E95;"># 显示 2021 年 9 月的日历，光标没有定位到哪一天</span></span>
<span class="line"><span style="color:#A6ACCD;">cal 11 11 2050         </span><span style="color:#676E95;"># 显示 2050 年 11 月的日历，光标定位到 11 日</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="搜索查找类" tabindex="-1">搜索查找类 <a class="header-anchor" href="#搜索查找类" aria-hidden="true">#</a></h3><ul><li><p><strong>find</strong> 指令</p><p><code>find</code> 指令将从指定目录下递归地遍历其各个子目录，将满足条件的文件或是目录显示在终端</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">find </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">搜索范围</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>常用的主要是三个选项：</p><ul><li><p><code>-name</code>：按照指定的文件名查找文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">find /home -name hello.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">find /home -name </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">.txt</span></span>
<span class="line"></span></code></pre></div><blockquote><p>按文件名，根据名称查找 /home 目录下的 hello.txt 文件</p></blockquote></li><li><p><code>-user</code>：查找属于指定用户的所有文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">find /opt -user ice</span></span>
<span class="line"></span></code></pre></div><blockquote><p>按拥有者，查找 /opt 目录下，用户名为 ice 的文件</p></blockquote></li><li><p><code>-size</code>：按照指定文件大小查找文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">find / -size +20</span></span>
<span class="line"><span style="color:#A6ACCD;">find / -size -40M</span></span>
<span class="line"><span style="color:#A6ACCD;">find / -size 30k</span></span>
<span class="line"></span></code></pre></div><blockquote><p>查找整个 Linux 系统下大于20 M 的文件（+n 大于，-n 小于，n 等于）</p></blockquote></li></ul></li><li><p><strong>locate</strong> 指令</p><p><code>locate</code> 指令可以快速定位文件路径。<code>locate</code> 指令利用实现建立的系统中所有文件名称及路径的 locate 数据库实现快速定位给定的文件。<code>locate</code> 指令无需遍历整个系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新 locate 时刻。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">locate 搜索文件</span></span>
<span class="line"></span></code></pre></div><blockquote><p>由于 <code>locate</code> 指令基于数据库进行查询，所以第一次运行前，必须使用 <code>updatedb</code> 指令创建 locate 数据库</p></blockquote></li><li><p><strong>grep</strong> 指令 和管道符号 <strong>|</strong></p><p>grep 是 global regular expression pattern 的缩写，用于过滤查找</p><p>管道符 <code>|</code> 表示将前一个命令的处理结果传递给后面的命令处理</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">grep </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 查找内容 源文件</span></span>
<span class="line"></span></code></pre></div><p>常用选项：</p><ul><li><code>-n</code> ：显示匹配及行号</li><li><code>-i</code>：忽略字母的大小写</li></ul></li></ul><h3 id="压缩和解压类" tabindex="-1">压缩和解压类 <a class="header-anchor" href="#压缩和解压类" aria-hidden="true">#</a></h3><ul><li><p><strong>gzip</strong> 和 <strong>gunzip</strong> 指令</p><p><code>gzip</code> 用于压缩和 <code>gunzip</code> 用于解压缩，压缩文件只能压缩成 <code>*.gz</code> 文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">gzip 文件</span></span>
<span class="line"><span style="color:#A6ACCD;">gunzip 文件.gz</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>zip</strong> 和 <strong>unzip</strong> 指令</p><p><code>zip</code> 用于压缩文件，<code>unzip</code> 用于解压文件，这个在项目打包发布中很有用</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">zip </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> XXX.zip 要被压缩的内容     </span><span style="color:#676E95;"># 压缩文件和目录</span></span>
<span class="line"><span style="color:#A6ACCD;">unzip </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> XXX.zip                </span><span style="color:#676E95;"># 解压缩</span></span>
<span class="line"></span></code></pre></div><p><code>zip</code> 常用选项：<code>-r</code>，递归压缩，即压缩目录</p><p><code>unzip</code> 常用选项：<code>-d&lt;目录&gt;</code>，指定解压后文件的存放目录</p></li><li><p><strong>tar</strong> 指令</p><p><code>tar</code> 指令是打包指令，最后打包的文件是 <code>.tar.gz</code> 的文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tar </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> XXX.tar.gz 打包的内容</span></span>
<span class="line"></span></code></pre></div><p>常用选项：</p><ul><li><code>-c</code> ：产生 <code>.tar </code>打包文件</li><li><code>-v</code>：显示详细信息</li><li><code>-f</code>：指定压缩后的文件名</li><li><code>-z</code>：打包同时压缩</li><li><code>-x</code>：解压 <code>.tar</code> 文件</li></ul><p>【示例】</p><ol><li><p>压缩多个文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tar -zcvf a.tar.gz a1.txt a2.txt</span></span>
<span class="line"></span></code></pre></div></li><li><p>将 /home 文件夹压缩成 myhome.tar.gz</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tar -zcvf myhome.tat.gz /home/      </span><span style="color:#676E95;"># 压缩中带 home 文件夹</span></span>
<span class="line"><span style="color:#A6ACCD;">tar -zcvf myhome.tat.gz -C /home/   </span><span style="color:#676E95;"># 压缩中仅有 home 下的文件和目录</span></span>
<span class="line"></span></code></pre></div></li><li><p>将 a.tar.gz 解压到当前目录</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tar -zxvf a.tar.gz</span></span>
<span class="line"></span></code></pre></div></li><li><p>将 myhome.tar.gz 解压到 /opt/tmp 目录下</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">tar -zxvf myhome.tar.gz -C /opt/tmp</span></span>
<span class="line"></span></code></pre></div><blockquote><p>目标目录必须存在才能解压成功</p></blockquote></li></ol></li></ul><h2 id="linux-组管理和权限管理" tabindex="-1">Linux 组管理和权限管理 <a class="header-anchor" href="#linux-组管理和权限管理" aria-hidden="true">#</a></h2><h3 id="修改文件用户和用户组" tabindex="-1">修改文件用户和用户组 <a class="header-anchor" href="#修改文件用户和用户组" aria-hidden="true">#</a></h3><p>在 Linux 中的每个用户必须属于一个组，不能独立于组外。在 Linux 中每个文件有所有者、所在组、其它组的概念</p><ul><li><p>修改文件的所有者</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">chown 用户名 文件目录名</span></span>
<span class="line"><span style="color:#A6ACCD;">chown -R 用户名 目录名      </span><span style="color:#676E95;"># 递归修改目录下所有文件和目录的用户</span></span>
<span class="line"></span></code></pre></div></li><li><p>修改文件所在组</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">chgrp 组名 文件目录名</span></span>
<span class="line"><span style="color:#A6ACCD;">chgrp -R 组名 目录名      </span><span style="color:#676E95;"># 递归修改目录下所有目录和文件的组</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="文件权限" tabindex="-1">文件权限 <a class="header-anchor" href="#文件权限" aria-hidden="true">#</a></h3><p><img src="`+u+`" alt=""></p><p>执行 <code>ls -l</code> 命令时，每一行记录最开始的一部分代表的就是该文件的权限内容，总共 10 位字符，除去第一位字符，后面 9 位字符每 3 个为一组，分别是拥有者、所在组、其他组的权限</p><ul><li>第 0 位确定文件类型 <ul><li>d：目录</li><li>-：普通文件</li><li>l：软链接</li><li>c：字符设备（键盘，鼠标）</li><li>b：块文件（硬盘）</li></ul></li><li>第 1-3 位确定所有者拥有的该文件的权限</li><li>第 4-6 位确定所属组拥有的该文件的权限</li><li>第 7-9 位确定其他用户拥有的该文件的权限</li></ul><blockquote><p><strong>rwx 作用到文件</strong>：</p><p><code>r</code>：表示可读，<code>w</code>：表示可写，<code>-</code>：表示没有权限，<code>x</code>：表示可执行</p><p><strong>rwx 作用到目录</strong>：</p><p><code>r</code>：表示可读，<code>w</code>：表示可修改，<code>-</code>：表示没有权限，<code>x</code>：表示可以进入该目录</p><p>【注】<strong>如果想删除一个文件不仅仅对该文件要有写的权限，而且要对该文件所在目录有修改的权限</strong></p></blockquote><p>第二栏表示有多少文件名链接到此节点(inode)。每个文件都会将它的权限与属性记录到文件系统的inode中，不过目录树却是使用文件名来记录，因此每个文件名就会链接到一个inode，这个属性记录的就是有多少不同的文件名链接到相同的一个inode号码。</p><p>中间其他部门比较简单，最后一部分文件名有点特殊，如果文件名之前多一个 <code>.</code>，则代表这个文件是隐藏文件。</p><h3 id="修改权限" tabindex="-1">修改权限 <a class="header-anchor" href="#修改权限" aria-hidden="true">#</a></h3><p>通过 <code>chmod</code> 指令，可以修改文件或目录的权限</p><ul><li><p>第一种方式：+、-、= 变更权限</p><p>u：所有者，g：所有组，o：其他人，a：所有人（u、g、o 的总和）</p><ul><li><code>chmod u=rwx,g=rx,o=x 文件目录名</code></li><li><code>chmod o+w 文件目录名</code></li><li><code>chmod a-x 文件目录名</code></li></ul></li><li><p>第二种方式：通过数字变更权限</p><p>r=4，w=2，x=1，rwx=4+2+1=7</p><p><code>chmod u=rwxmg=rx,o=x 文件目录名</code>相当于<code>chmod 751 文件名</code></p></li></ul><h2 id="定时任务调用" tabindex="-1">定时任务调用 <a class="header-anchor" href="#定时任务调用" aria-hidden="true">#</a></h2><p>任务调度是指系统在某个时间执行的特定的命令或持续</p><p>任务调度分为两种</p><ul><li>系统工作，有些重要的工作必须周而复始地执行。如病毒扫描等</li><li>个别用户工作，比如对 MySQL 数据库的备份</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">crontab </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>常用选项：</p><ul><li><code>-e</code>：编辑 crontab 定时任务</li><li><code>-l</code>：查询 crontab 任务</li><li><code>-r</code>：删除当前用户所有的 crontab 任务</li></ul><p>设定任务的一般步骤：</p><ol><li>执行 <code>crondtab -e</code> 进入配置文件编辑模式</li><li>设置定时任务，一般是 任务设定时间 + 要执行的命令</li><li>保存退出</li></ol><p>任务设定时间语法如下：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">秒</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">分</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">小时</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">日</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">月</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">周</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">年</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 其中年是可选的</span></span>
<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">*    *    *    *    *</span></span>
<span class="line"><span style="color:#A6ACCD;">-    -    -    -    -</span></span>
<span class="line"><span style="color:#A6ACCD;">|    |    |    |    |</span></span>
<span class="line"><span style="color:#A6ACCD;">|    |    |    |    +----- 星期中星期几 (0 - 7) (星期天 为0)</span></span>
<span class="line"><span style="color:#A6ACCD;">|    |    |    +---------- 月份 (1 - 12) </span></span>
<span class="line"><span style="color:#A6ACCD;">|    |    +--------------- 一个月中的第几天 (1 - 31)</span></span>
<span class="line"><span style="color:#A6ACCD;">|    +-------------------- 小时 (0 - 23)</span></span>
<span class="line"><span style="color:#A6ACCD;">+------------------------- 分钟 (0 - 59)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="域取值" tabindex="-1">域取值 <a class="header-anchor" href="#域取值" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">域</th><th style="text-align:center;">取值范围</th><th style="text-align:center;">特殊字符</th></tr></thead><tbody><tr><td style="text-align:center;">秒</td><td style="text-align:center;">[0, 59]</td><td style="text-align:center;">* , - /</td></tr><tr><td style="text-align:center;">分钟</td><td style="text-align:center;">[0, 59]</td><td style="text-align:center;">* , - /</td></tr><tr><td style="text-align:center;">小时</td><td style="text-align:center;">[0, 23]</td><td style="text-align:center;">* , - /</td></tr><tr><td style="text-align:center;">日期</td><td style="text-align:center;">[1, 31]</td><td style="text-align:center;">* , - / ? L W</td></tr><tr><td style="text-align:center;">月份</td><td style="text-align:center;">[1, 12]或[JAN, DEC]</td><td style="text-align:center;">* , - /</td></tr><tr><td style="text-align:center;">星期</td><td style="text-align:center;">[1, 7]或[MON, SUN]。<br>若您使用[1, 7]表达方式，<code>1</code>代表星期一，<code>7</code>代表星期日。</td><td style="text-align:center;">* , - / ? L #</td></tr><tr><td style="text-align:center;">年</td><td style="text-align:center;">[当前年份，2099]</td><td style="text-align:center;">* , - /</td></tr></tbody></table><h3 id="特殊字符" tabindex="-1">特殊字符 <a class="header-anchor" href="#特殊字符" aria-hidden="true">#</a></h3><p>Cron 表达式中的每个域都支持一定数量的特殊字符，每个特殊字符有其特殊含义。</p><table><thead><tr><th style="text-align:center;">特殊字符</th><th style="text-align:center;">含义</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;"><code>*</code></td><td style="text-align:center;">所有可能的值。</td><td style="text-align:center;">在月域中，<code>*</code>表示每个月；在星期域中，<code>*</code>表示星期的每一天。</td></tr><tr><td style="text-align:center;"><code>,</code></td><td style="text-align:center;">列出枚举值。</td><td style="text-align:center;">在分钟域中，<code>5,20</code>表示分别在5分钟和20分钟触发一次。</td></tr><tr><td style="text-align:center;"><code>-</code></td><td style="text-align:center;">范围。</td><td style="text-align:center;">在分钟域中，<code>5-20</code>表示从5分钟到20分钟之间每隔一分钟触发一次。</td></tr><tr><td style="text-align:center;"><code>/</code></td><td style="text-align:center;">指定数值的增量。</td><td style="text-align:center;">在分钟域中，<code>0/15</code>表示从第0分钟开始，每15分钟。在分钟域中<code>3/20</code>表示从第3分钟开始，每20分钟。</td></tr><tr><td style="text-align:center;"><code>?</code></td><td style="text-align:center;">不指定值，仅日期和星期域支持该字符。</td><td style="text-align:center;">当日期或星期域其中之一被指定了值以后，为了避免冲突，需要将另一个域的值设为<code>?</code>。</td></tr><tr><td style="text-align:center;"><code>L</code></td><td style="text-align:center;">单词Last的首字母，表示最后一天，仅日期和星期域支持该字符。</td><td style="text-align:center;">在日期域中，<code>L</code>表示某个月的最后一天。在星期域中，<code>L</code>表示一个星期的最后一天，也就是星期日（<code>SUN</code>）。如果在<code>L</code>前有具体的内容，例如，在星期域中的<code>6L</code>表示这个月的最后一个星期六。</td></tr><tr><td style="text-align:center;"><code>W</code></td><td style="text-align:center;">除周末以外的有效工作日，在离指定日期的最近的有效工作日触发事件。<code>W</code>字符寻找最近有效工作日时不会跨过当前月份，连用字符<code>LW</code>时表示为指定月份的最后一个工作日。</td><td style="text-align:center;">在日期域中<code>5W</code>，如果5日是星期六，则将在最近的工作日星期五，即4日触发。如果5日是星期天，则将在最近的工作日星期一，即6日触发；如果5日在星期一到星期五中的一天，则就在5日触发。</td></tr><tr><td style="text-align:center;"><code>#</code></td><td style="text-align:center;">确定每个月第几个星期几，仅星期域支持该字符。</td><td style="text-align:center;">在星期域中，<code>4#2</code>表示某月的第二个星期四。</td></tr></tbody></table><h3 id="取值示例" tabindex="-1">取值示例 <a class="header-anchor" href="#取值示例" aria-hidden="true">#</a></h3><p><img src="`+C+`" alt=""></p><p><strong>【任务调度的简单实例】每隔 1 分钟，将当前的日期信息，追加到 <code>/home/mydate</code> 文件中</strong></p><ol><li><p>先编写一个文件 <a href="http://mytask1.sh" target="_blank" rel="noreferrer">mytask1.sh</a></p><p>写入<code>date &gt;&gt; /tmp/mydate</code></p></li><li><p>给 <a href="http://mytask1.sh" target="_blank" rel="noreferrer">mytask1.sh</a> 一个可执行权限</p><p>前面才写过得权限修改语句 <code>chmod</code> 语句</p></li><li><p>执行 <code>crontab -e</code> 写入 <code>*/1 * * * * /home/mytask1.sh</code></p></li><li><p>保存退出</p></li></ol><p><strong>crond</strong> 相关指令：</p><ul><li><code>crontab -r</code>：终止任务调度</li><li><code>crontab -l</code>：列出当前有哪些任务调度</li><li><code>service crond restart</code>：重启任务调度</li></ul><h2 id="linux-分区" tabindex="-1">Linux 分区 <a class="header-anchor" href="#linux-分区" aria-hidden="true">#</a></h2><h3 id="分区基础知识" tabindex="-1">分区基础知识 <a class="header-anchor" href="#分区基础知识" aria-hidden="true">#</a></h3><ul><li>MBR 分区 <ul><li>最多支持四个主分区</li><li>系统只能安装在主分区</li><li>扩展分区要占一个主分区</li><li>MBR 最大只支持2 TB，但拥有最好的兼容性</li></ul></li><li>GTP 分区 <ul><li>支持无线多个主分区（但是操作系统可能有限制，比如 Windows 下最多 128 个分区）</li><li>最大支持 18 EB 的大容量（1 EB = 1024 PB, 1 PB = 1024 TB）</li><li>Windows 7 64 位以后支持GTP</li></ul></li></ul><h3 id="linux-分区-1" tabindex="-1">Linux 分区 <a class="header-anchor" href="#linux-分区-1" aria-hidden="true">#</a></h3><ul><li>Linux 来说无论有几个分区，分给哪一目录使用，它归根到底就只有一个根目录，一个独立且唯一的文件结构，Linux 中每个分区都是用来组成这个文件系统的一部分</li><li>Linux 采用了一种叫 “载入” 的处理办法，它的整个文件系统中包含了一整套的文件和目录，且将一个分区和一个目录联系起来。这时要载入的一个分区将使它的存储空间在一个目录下获得</li></ul><h2 id="linux-进程管理" tabindex="-1">Linux 进程管理 <a class="header-anchor" href="#linux-进程管理" aria-hidden="true">#</a></h2><h3 id="基本介绍" tabindex="-1">基本介绍 <a class="header-anchor" href="#基本介绍" aria-hidden="true">#</a></h3><ul><li>在 Linux 中，每个执行的程序都称为一个进程，每一个进程都分配一个 ID 号</li><li>每一个进程都会对应一个父进程，而这个父进程可以复制多个子进程</li><li>每个进程都可能以两种方式存在，前台与后台。所谓前台进程就是用户目前的屏幕上可以进行操作的；后台进程则是实际在操作，但由于屏幕上无法看到的进程，通常使用后台方式进行</li><li>一般系统的服务都是以后台进程的方式存在，而且都会常驻在系统中。直到关机才结束</li></ul><h3 id="进程相关操作" tabindex="-1">进程相关操作 <a class="header-anchor" href="#进程相关操作" aria-hidden="true">#</a></h3><p><code>ps</code> 命令是用来查看目前系统中有哪些正在执行，以及它们执行的状况，可以不加任何参数</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">ps -a         </span><span style="color:#676E95;"># 显示当前终端的所有进程信息</span></span>
<span class="line"><span style="color:#A6ACCD;">ps -u         </span><span style="color:#676E95;"># 以用户的格式显示进程信息</span></span>
<span class="line"><span style="color:#A6ACCD;">ps -x         </span><span style="color:#676E95;"># 显示后台进程运行的参数</span></span>
<span class="line"></span></code></pre></div><p>如果先显示父进程，可以使用命令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">ps -ef</span></span>
<span class="line"></span></code></pre></div><p>若是某个进程执行一半需要停止时，或是已很大的系统资源时，此时可以考虑停止该进程，可以使用 <code>kill</code> 命令完成此操作</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">kill</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> 进程号     </span><span style="color:#676E95;"># 通过进程号杀死进程</span></span>
<span class="line"><span style="color:#A6ACCD;">killall 进程名称      </span><span style="color:#676E95;"># 通过进程名称杀死进程，也支持通配符</span></span>
<span class="line"></span></code></pre></div><p>常用选项是 <code>-9</code>，表示强迫进程立即停止</p><p>查看进程树，可以使用 <code>pstree</code> 命令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">pstree </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>常用选项：<code>-p</code>，显示进程的 PID，<code>-u</code>，显示进程所属用户</p><h3 id="服务管理" tabindex="-1">服务管理 <a class="header-anchor" href="#服务管理" aria-hidden="true">#</a></h3><p>服务本质就是进程，但是是运行太后台的，通常都会监听某个端口，等待其他进程的请求，比如 MySQL，因此我们又称为守护进程。</p><p>service 管理有如下常见的指令：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">service 服务名 start</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">stop</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">restart</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">reload</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">status</span></span>
<span class="line"><span style="color:#A6ACCD;">systemctl  </span><span style="color:#676E95;"># CentOS 7.0 之后，不再使用 service，而是 systemctl</span></span>
<span class="line"></span></code></pre></div><h3 id="chkconfig-指令" tabindex="-1">chkconfig 指令 <a class="header-anchor" href="#chkconfig-指令" aria-hidden="true">#</a></h3><p>通过 <code>chkconfig</code> 指令可以给每个服务的各个运行级别设置自动启动/关闭</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">chkconfig --list                       </span><span style="color:#676E95;"># 查看服务</span></span>
<span class="line"><span style="color:#A6ACCD;">chkconfig 服务名 --list                 </span><span style="color:#676E95;"># 查看指定服务</span></span>
<span class="line"><span style="color:#A6ACCD;">chkconfig --level 运行级别 服务名 on/off </span><span style="color:#676E95;"># 修改指定服务在某个运行级别下是否自动启动</span></span>
<span class="line"></span></code></pre></div><h3 id="进程监控" tabindex="-1">进程监控 <a class="header-anchor" href="#进程监控" aria-hidden="true">#</a></h3><h4 id="动态进程监控" tabindex="-1">动态进程监控 <a class="header-anchor" href="#动态进程监控" aria-hidden="true">#</a></h4><p><code>top</code> 命令和 <code>ps</code> 命令很相似，它们都用来显示正在执行额进程。<code>top</code> 与 <code>ps</code> 最大的不同之处，在于 <code>top</code> 在执行一段时间可以更新正在运行的进程</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">top </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><ul><li><code>-d 秒数</code>：指定 <code>top</code> 命令每隔几秒更新，默认是 3 秒在 <code>top</code> 命令的交互模式当中可以执行的命令</li><li><code>-i</code>：使 <code>top</code> 不显示任何闲置或僵死进程</li><li><code>-p</code>：通过指定监控进程 ID 来仅仅监控某个进程的状态</li></ul><p>在 <code>top</code> 命令的结果中还可以执行交互命令：</p><ul><li><code>P</code>：按 CPU 使用率排序，默认排序字段</li><li><code>M</code>：按内存使用率排序</li><li><code>N</code>：按 PID 排序</li><li><code>q</code>：退出 <code>top</code></li></ul><h4 id="网络状态监控" tabindex="-1">网络状态监控 <a class="header-anchor" href="#网络状态监控" aria-hidden="true">#</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">netstat </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">选项</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">netstat -anp     </span><span style="color:#676E95;"># 一般都这么写</span></span>
<span class="line"></span></code></pre></div><ul><li><code>-an</code>：按一定顺序排列输出</li><li><code>-p</code>：显示哪个进程在调用</li></ul><p>另外，测试网络连接性可以用 <code>ping</code> 命令，和 Windows 中的 DOS 命令一样。</p>`,159),A=[D];function b(F,x,k,v,m,f){return l(),a("div",null,A)}const L=s(g,[["render",b]]);export{_ as __pageData,L as default};
