import{_ as t,o as e,c as a,a as n}from"./app.aa5490e0.js";const x=JSON.parse('{"title":"基本数据类型","description":"","frontmatter":{},"headers":[{"level":2,"title":"数值型","slug":"数值型","link":"#数值型","children":[]},{"level":2,"title":"字符型","slug":"字符型","link":"#字符型","children":[]},{"level":2,"title":"日期时间类型","slug":"日期时间类型","link":"#日期时间类型","children":[]},{"level":2,"title":"LOB 类型","slug":"lob-类型","link":"#lob-类型","children":[]}],"relativePath":"md/db/oracle/type.md","lastUpdated":1672663467000}'),l={name:"md/db/oracle/type.md"},s=n(`<h1 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-hidden="true">#</a></h1><h2 id="数值型" tabindex="-1">数值型 <a class="header-anchor" href="#数值型" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">number</td><td style="text-align:center;">长度不限，只要是数字就行</td></tr><tr><td style="text-align:center;">number(m)</td><td style="text-align:center;">整数，长度不超过m位</td></tr><tr><td style="text-align:center;">number(m,n)</td><td style="text-align:center;">浮点数，m是所有有效数字的位数，n是小数点以后的位数</td></tr></tbody></table><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">number</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)   # 最大值为999.99，如果数值超出了位数限制就会被截取多余的位数</span></span>
<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#A6ACCD;"># 如果将575.316存入，则实际保存的值为575.32</span></span>
<span class="line"><span style="color:#C792EA;">number</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)  # 输入575.316，真正保存的数据是575</span></span>
<span class="line"></span></code></pre></div><h2 id="字符型" tabindex="-1">字符型 <a class="header-anchor" href="#字符型" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">char(n)</td><td style="text-align:center;">定长字符串，n为字节长，如果不指定长度，缺省为1个字节长（一个汉字为2字节）</td></tr><tr><td style="text-align:center;">varchar2(n)</td><td style="text-align:center;">可变长字符串串，最多存取n个字符</td></tr></tbody></table><h2 id="日期时间类型" tabindex="-1">日期时间类型 <a class="header-anchor" href="#日期时间类型" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">date</td><td style="text-align:center;">包含世纪、年、月、日、天、小时、分、秒</td></tr><tr><td style="text-align:center;">timestamp</td><td style="text-align:center;">时间戳，较date更为精确，一般date足够</td></tr></tbody></table><h2 id="lob-类型" tabindex="-1">LOB 类型 <a class="header-anchor" href="#lob-类型" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">BLOB</td><td style="text-align:center;">二进制数据</td></tr><tr><td style="text-align:center;">CLOB</td><td style="text-align:center;">字符型数据</td></tr><tr><td style="text-align:center;">BFILE</td><td style="text-align:center;">二进制文件</td></tr></tbody></table>`,10),r=[s];function d(c,i,o,h,p,y){return e(),a("div",null,r)}const b=t(l,[["render",d]]);export{x as __pageData,b as default};
